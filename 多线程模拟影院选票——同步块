package testThread;

import java.util.ArrayList;
import java.util.List;

/**
 * 
 * @author nihao
 *
 */
public class HappyCinema {
	public static void main(String[] args) {
		List<Integer> available = new ArrayList<Integer>();
		available.add(1);
		available.add(2);
		available.add(3);
		available.add(4);
		available.add(5);
		available.add(6);
		available.add(7);
		available.add(8);
		available.add(9);
		Cinema c = new Cinema(available, "工体电影院");
		List<Integer> seats1 = new ArrayList<Integer>();
		seats1.add(1);
		seats1.add(2);
		seats1.add(3);
		List<Integer> seats2 = new ArrayList<Integer>();
		seats2.add(6);
		seats2.add(7);
		seats2.add(8);
		Thread c1 = new Thread(new Customer(c,seats1),"张三");
		Thread c2 = new Thread(new Customer(c,seats2),"李四");
		c1.start();
		c2.start();
	}
}

//影院
class Cinema{
	List<Integer> available;
	String name;
	
	public Cinema(List<Integer> available, String name) {
		this.available = available;
		this.name = name;
	}
	
	public boolean bookTickets(List<Integer> seats) {
		List<Integer> copy = new ArrayList<Integer>();
		copy.addAll(available);
		System.out.println("可预订的座位-->"+available);
		copy.removeAll(seats);
		boolean isSuccessful = true;
		if (available.size()-copy.size()!=seats.size()) {
			isSuccessful = false;
			System.out.println(Thread.currentThread().getName()+"预定失败");
		}else {
			available = copy;
			System.out.print(Thread.currentThread().getName()+"预订成功,");
			System.out.println("选择座位："+seats);
			System.out.println("剩下座位："+available);
		}
		return isSuccessful;
	}
}

//顾客
class Customer implements Runnable{
	Cinema cinema;
	List<Integer> seats;
	
	
	public Customer(Cinema cinema, List<Integer> seats) {
		this.cinema = cinema;
		this.seats = seats;
	}


	@Override
	public void run() {
		synchronized (cinema) {
			cinema.bookTickets(seats);
		}
		
		
	}
	
}
